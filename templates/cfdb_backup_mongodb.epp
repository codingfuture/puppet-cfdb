<%- | String[1] $backup_dir,
      String[1] $root_dir,
      String[1] $user,
      String[1] $base_date='month' |
-%>
#!/bin/dash

root_dir=<%= $root_dir %>
curl="${root_dir}/bin/cfdb_curl"

<%= $cfbackup::periodic_helper %> "<%= $user %>" "<%= $backup_dir %>" "<%= $base_date %>" <<EOT

    if [ ! -e \$backup_dir/base ]; then
        backup_out=\$backup_dir/base
        inc_opts="--oplog"

        # Workaround renameCollection with --oplog :(
        trap "/bin/echo -e 'db.fsyncUnlock()' | /usr/bin/mongo --host=$root_dir/server.sock admin" EXIT
        /bin/echo -e 'db.fsyncLock()' | /usr/bin/mongo --host=$root_dir/server.sock admin
    else
        backup_out=\$backup_dir/inc_\$(/bin/date --utc "+%Y%m%d_%H%M%S")
        last_oplog_ts=\$(cat \$backup_dir/last_oplog_ts)
        inc_opts="-d local -c oplog.rs --query {ts:{\\\$gt:\$last_oplog_ts}}"
    fi

    # just in case
    test ! -e \$backup_out

    . $root_dir/.mongorc.sh

    next_ts=\$( \
        /bin/echo -e 'use local\ndb.oplog.rs.find().sort({\$natural:-1}).limit(1).next().ts' | \
        /usr/bin/mongo --host=$root_dir/server.sock admin | \
        /bin/grep Timestamp)

    test ! -z "\$next_ts"

    # NOTES:
    # 1. That's not really secure to expose credentials in env, but MongoDB has such limitations.
    # 2. UNIX socket seems to be not supported.
    # 3. Base backup restore may be more efficient with mongod stop & tar.
    # 4. Oplog should safe to apply multiple times on restore.
    /usr/bin/mongodump \
        --host=\${DB_HOST} \
        --port=\${DB_PORT} \
        --authenticationDatabase=admin \
        --username=\$ROOT_USER \
        --password=\$ROOT_PASS \
        --out=\$backup_out.tmp \
        --gzip \
        \$inc_opts

    if [ \$backup_out != \$backup_dir/base ]; then
        mv \$backup_out.tmp/local/oplog.rs.bson.gz \$backup_out.tmp/oplog.bson.gz
        rm -rf \$backup_out.tmp/local
    else
        gzip <\$backup_out.tmp/oplog.bson >\$backup_out.tmp/oplog.bson.gz
        rm \$backup_out.tmp/oplog.bson
    fi

    mv \$backup_out.tmp \$backup_out
    echo -n "\$next_ts" | /bin/sed -e 's/ //g' >\$backup_dir/last_oplog_ts

EOT
