<% |String $service_name,
    String $role,
    String $password,
    String $database |
-%>
#!/usr/bin/python -B

import sys, os, psycopg2

#---
# workaround for known HAProxy issue with junk getting into connections...
# http://thread.gmane.org/gmane.comp.web.haproxy/28184/focus=28254
sys.stdin.close()
sys.stdout.close()
sys.stderr.close()
#---


proxy_name = os.environ['HAPROXY_PROXY_NAME']
server_name = os.environ['HAPROXY_SERVER_NAME']

is_load_balance = (proxy_name.find(':lb') >= 0)

sock_name = '/run/<%= $service_name %>/check__{0}.sock'.format(server_name)
pgsock_dir = '/tmp/<%= $service_name %>/check__{0}'.format(server_name)
pgport=123
pgsock_file="{0}/.s.PGSQL.{1}".format(pgsock_dir, pgport)

os.umask(0077)

try:
    os.makedirs(pgsock_dir)
except OSError:
    pass

try:
    os.symlink(sock_name, pgsock_file)
except OSError:
    pass
    
sock_dir_stat = os.stat(pgsock_dir)

if sock_dir_stat.st_uid != os.geteuid():
    print("FATAL: Invalid socket folder permissions. Possible attack.")
    print(sock_dir_stat)
    sys.exit(1)
    
conn_params={
    'database': '<%= $database %>',
    'user': '<%= $role %>',
    'password': '<%= $password %>',
    'host': pgsock_dir,
    'port': pgport,
    'connect_timeout': 2,
}

exit_code = 1

try:
    conn = psycopg2.connect(**conn_params)
except:
    conn = psycopg2.connect(**conn_params)

curs = conn.cursor()
if is_load_balance:
    curs.execute('SELECT pg_is_in_recovery();')
    res = curs.fetchone()
    if res[0] == False:
        exit_code = 0
else:
    curs.execute('SELECT 1;')
    res = curs.fetchone()
    if res[0] == 1:
        exit_code = 0

try:
    conn.close()
except:
    pass

sys.exit(exit_code)

